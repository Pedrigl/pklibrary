@{
	Layout = "~/Themes/UnityFX/Layout/_Layout-Wiki.cshtml";
	Page.Title = "Abilities";
}

<section id="WikiaPage" class="WikiaPage V2" onclick="">
	<header id="PageHeader" class="page-header">
		<div class="page-header__main">
			<h1 class="page-header__title">@Page.Title</h1>
		</div>
		@*<div class="page-header__contribution">
			<div>
				<!--Empty div to ensure $actionButton is always pushed to bottom of the container-->
			</div>
			<div class="page-header__contribution-buttons">
				<div class="wds-button-group">
					<a href="/web/20190329212818/https://essentialsdocs.fandom.com/wiki/Abilities?action=edit" class="wds-button" id="ca-viewsource" data-tracking="ca-viewsource">
						<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 18 18" class="wds-icon wds-icon-small" id="wds-icons-lock-small">
							<defs>
								<path id="lock-small" d="M14 16H4V8h10v8zM7 4c0-1.104.897-2 2-2s2 .896 2 2v2H7V4zm8 2h-2V4c0-2.205-1.794-4-4-4S5 1.795 5 4v2H3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zm-5 4H8a1 1 0 1 0 0 2v1a1 1 0 1 0 2 0v-1a1 1 0 1 0 0-2">
								</path>
							</defs>
							<use fill-rule="evenodd" xlink:href="#lock-small">
							</use>
						</svg>
						<span>Edit</span>
					</a>
					<div class="wds-dropdown">
						<div class="wds-button wds-dropdown__toggle">
							<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 12 12" class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny">
								<defs>
									<path id="dropdown-tiny-a" d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z">
									</path>
								</defs>
								<use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
								</use>
							</svg>
						</div>
						<div class="wds-dropdown__content wds-is-not-scrollable wds-is-right-aligned">
							<ul class="wds-list wds-is-linked">
								<li>
									<a id="ca-history" href="/web/20190329212818/https://essentialsdocs.fandom.com/wiki/Abilities?action=history" data-tracking="ca-history-dropdown">
										History
									</a>
								</li>
								<li>
									<a id="ca-talk" href="/web/20190329212818/https://essentialsdocs.fandom.com/wiki/Talk:Abilities?action=edit&amp;redlink=1" class="new" data-tracking="ca-talk-dropdown">
										Talk (0)
									</a>
								</li>
							</ul>
						</div>
					</div>
				</div>
				<a class="wds-button wds-is-secondary" href="#" id="ShareEntryPoint">
					<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 18 18" class="wds-icon wds-icon-small" id="wds-icons-share-small">
						<defs>
							<path id="share-small" d="M14.5 15a1.502 1.502 0 0 1-1.406-2.022l.022-.05.017-.045c.236-.52.76-.883 1.367-.883.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5M4.906 9.522l-.022.05-.017.045c-.236.52-.76.883-1.367.883C2.673 10.5 2 9.827 2 9s.673-1.5 1.5-1.5c.607 0 1.131.363 1.367.883l.017.045.022.05a1.482 1.482 0 0 1 0 1.044M14.5 3c.827 0 1.5.673 1.5 1.5S15.327 6 14.5 6a1.503 1.503 0 0 1-1.367-.883l-.017-.045-.022-.05A1.502 1.502 0 0 1 14.5 3m0 7c-1.098 0-2.08.508-2.722 1.303L6.983 9.348a3.653 3.653 0 0 0 0-.696l4.795-1.955A3.492 3.492 0 0 0 14.5 8C16.43 8 18 6.43 18 4.5S16.43 1 14.5 1a3.504 3.504 0 0 0-3.483 3.848L6.222 6.803A3.492 3.492 0 0 0 3.5 5.5C1.57 5.5 0 7.07 0 9s1.57 3.5 3.5 3.5c1.098 0 2.08-.508 2.722-1.303l4.795 1.955A3.504 3.504 0 0 0 14.5 17c1.93 0 3.5-1.57 3.5-3.5S16.43 10 14.5 10">
							</path>
						</defs>
						<use fill-rule="evenodd" xlink:href="#share-small">
						</use>
					</svg>
					<span>Share</span>
				</a>
			</div>
		</div>*@
	</header>
	<hr class="page-header__separator">

	<article id="WikiaMainContent" class="WikiaMainContent">
		<div id="WikiaMainContentContainer" class="WikiaMainContentContainer">
			<div id="content" class="WikiaArticle">
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
					<!-- Google Tag Manager (noscript) -->
					<noscript><iframe src="https://web.archive.org/web/20210512072417if_/https://www.googletagmanager.com/ns.html?id=GTM-N6XD44P" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
					<!-- End Google Tag Manager (noscript) -->
					<div class="mw-parser-output">
						<p>
							This article describes how to set up&nbsp;<b>obstacles</b>, which can be a (temporary) physical barrier or a special kind of path (such as sliding ice). It also describes how to set up&nbsp;Headbutt&nbsp;trees. Most obstacles described here can be overcome or traversed by&nbsp;using a move outside battle.
						</p>
						<div id="toc" class="toc">
							<input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none"><div class="toctitle" lang="en" dir="ltr"><h2>Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
							<ul>
								<li class="toclevel-1 tocsection-1">
									<a href="#Event_obstacles"><span class="tocnumber">1</span> <span class="toctext">Event obstacles</span></a>
									<ul>
										<li class="toclevel-2 tocsection-2"><a href="#Cut_trees"><span class="tocnumber">1.1</span> <span class="toctext">Cut trees</span></a></li>
										<li class="toclevel-2 tocsection-3"><a href="#Cracked_rocks"><span class="tocnumber">1.2</span> <span class="toctext">Cracked rocks</span></a></li>
										<li class="toclevel-2 tocsection-4"><a href="#Boulders"><span class="tocnumber">1.3</span> <span class="toctext">Boulders</span></a></li>
										<li class="toclevel-2 tocsection-5"><a href="#Headbutt_trees"><span class="tocnumber">1.4</span> <span class="toctext">Headbutt trees</span></a></li>
									</ul>
								</li>
								<li class="toclevel-1 tocsection-6">
									<a href="#Terrain_tag_obstacles"><span class="tocnumber">2</span> <span class="toctext">Terrain tag obstacles</span></a>
									<ul>
										<li class="toclevel-2 tocsection-7"><a href="#Waterfalls"><span class="tocnumber">2.1</span> <span class="toctext">Waterfalls</span></a></li>
										<li class="toclevel-2 tocsection-8"><a href="#Underwater_areas"><span class="tocnumber">2.2</span> <span class="toctext">Underwater areas</span></a></li>
									</ul>
								</li>
							</ul>
						</div>

						<h2><span class="mw-headline" id="Event_obstacles">Event obstacles</span></h2>
						<p>
							These, quite simply, are events that cannot be passed. Most of them can, however, be moved or destroyed. Such events include:
						</p>
						<ul>
							<li>Trees that can be cut down (Cut).</li>
							<li>Cracked rocks that can be smashed (Rock Smash).</li>
							<li>Boulders that can be moved (Strength).</li>
							<li>NPCs that block paths/doors.</li>
						</ul>
						<h3><span class="mw-headline" id="Cut_trees">Cut trees</span></h3>
						<p>
							A tree that can be cut down with&nbsp;the move Cut&nbsp;should contain the following commands:
						</p>
<pre>@@&gt;Set Move Route: This event
:              &nbsp;: $&gt;Turn Down
@@&gt;Conditional Branch: Script: Kernel.pbCut
  @@&gt;Set Move Route: This event
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  &nbsp;:             &nbsp;: $&gt;Turn Left
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  &nbsp;:             &nbsp;: $&gt;Turn Right
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  &nbsp;:             &nbsp;: $&gt;Turn Up
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  @@&gt;Wait for Move's Completion
  @@&gt;Script: pbEraseThisEvent
  @@&gt;
 &nbsp;:  Branch End
 @@&gt;
</pre>
						<p>
							It should also have a name of "Tree", as when the player chooses to&nbsp;use Cut&nbsp;from the&nbsp;party&nbsp;screen, one of the checks performed to see if it can be used is whether there is an event immediately in front of the player with this name (and if so, to use Cut).
						</p><p>
							The move routes are for the purpose of animating the tree being cut down.
						</p><p>
							The script called in the Conditional Branch includes messages such as "This tree looks like it can be cut down." and asks whether the player wants to do so (if they can). Therefore there is no need to include these messages in the event.
						</p><p>
							When cut down, a Cut tree will only disappear until the player leaves the map; at which point, it will reappear. To cut the tree down permanently, replace the&nbsp;<code>pbEraseThisEvent</code>&nbsp;script with a command that sets the event's Self Switch A to ON, and give the event a second (blank) page which depends on Self Switch A being ON.
						</p>
						<h3><span class="mw-headline" id="Cracked_rocks">Cracked rocks</span></h3>
						<p>
							A cracked rock that can be smashed with&nbsp;the move Rock Smash&nbsp;should contain the following commands:
						</p>
<pre>@@&gt;Set Move Route: This event
:              &nbsp;: $&gt;Turn Down
@@&gt;Conditional Branch: Script: Kernel.pbRockSmash
  @@&gt;Set Move Route: This event
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  &nbsp;:             &nbsp;: $&gt;Turn Left
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  &nbsp;:             &nbsp;: $&gt;Turn Right
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  &nbsp;:             &nbsp;: $&gt;Turn Up
  &nbsp;:             &nbsp;: $&gt;Wait: 2 frame(s)
  @@&gt;Wait for Move's Completion
  @@&gt;Script: pbEraseThisEvent
  @@&gt;Script: Kernel.pbRockSmashRandomEncounter
  @@&gt;
 &nbsp;:  Branch End
 @@&gt;
</pre>
						<p>
							It should also have a name of "Rock", as when the player chooses to&nbsp;use Rock Smash&nbsp;from the&nbsp;party&nbsp;screen, one of the checks performed to see if it can be used is whether there is an event immediately in front of the player with this name (and if so, to use Rock Smash).
						</p><p>
							The move routes are for the purpose of animating the rock shattering.
						</p><p>
							The script called in the Conditional Branch includes messages such as "It's a rugged rock, but a Pokémon may be able to smash it." and asks whether the player wants to do so (if they can). Therefore there is no need to include these messages in the event.
						</p><p>
							When a cracked rock has been smashed, there is a 25% chance that there will be a&nbsp;wild Pokémon encounter&nbsp;(if the "RockSmash" encounter type has been defined for the map). The def that decides this is in the script section&nbsp;<b>PokemonHiddenMoves</b>.
						</p><p>
							When smashed, a cracked rock will only disappear until the player leaves the map; at which point, it will reappear. To smash the rock permanently, replace the&nbsp;<code>pbEraseThisEvent</code>&nbsp;script with a command that sets the event's Self Switch A to ON, and give the event a second (blank) page which depends on Self Switch A being ON.
						</p>
						<h3><span class="mw-headline" id="Boulders">Boulders</span></h3>
						<p>
							A boulder that can be pushed with&nbsp;the move Strength&nbsp;should trigger&nbsp;<i>not</i>&nbsp;by pressing the&nbsp;Use button&nbsp;(Action Button) like above, but instead when the player walks into it (Player Touch). It should contain the following command:
						</p>
<pre>@@&gt;Script: pbPushThisBoulder
</pre>
						<p>
							It should also have a name of "Boulder", as when the player chooses to&nbsp;use Strength&nbsp;from the&nbsp;party&nbsp;screen, one of the checks performed to see if it can be used is whether there is an event immediately in front of the player with this name (and if so, to use Strength).
						</p><p>
							The script called simply checks whether Strength has been used already, and if so, to move the boulder. The script that asks the player whether they want to use Strength in the first place is a procedure that checks whether there is an event immediately in front of the player with the name "Boulder", and if so, to call a def that asks whether the player wants to use Strength. See the article&nbsp;Using moves outside battle&nbsp;for more information about this procedure.
						</p><p>
							A moved boulder will return to its original position once the player leaves the map. Some puzzles require the boulder to remain in its new place (e.g. on a switch), or to disappear (e.g. pushed down a hole). To do this, you should create a "control event" which constantly checks the boulder's position via Parallel Process, and which makes it become inert/disappear if it is in a particular location (by switching to a new page of the boulder's event via manipulating its Self Switches).
						</p>
						<h3><span class="mw-headline" id="Headbutt_trees">Headbutt trees</span></h3>
						<p>
							Headbutt trees are, strictly speaking, not an obstacle because they can never be overcome. However, they are included here because they work similarly to the above obstacles.
						</p><p>
							A tree that can be headbutted with&nbsp;the move Headbutt&nbsp;should contain the following command:
						</p>
<pre>@@&gt;Script: pbHeadbutt
</pre>
						<p>
							It should also have a name of "HeadbuttTree", as when the player chooses to&nbsp;use Headbutt&nbsp;from the&nbsp;party&nbsp;screen, one of the checks performed to see if it can be used is whether there is an event immediately in front of the player with this name (and if so, to use Headbutt).
						</p><p>
							The script called in the Conditional Branch includes messages such as "A Pokémon could be in this tree. Maybe a Pokémon could shake it." and asks whether the player wants to do so (if they can). Therefore there is no need to include these messages in the event.
						</p><p>
							When a tree has been headbutted, there is a chance that there will be a&nbsp;wild Pokémon encounter&nbsp;(if the "HeadbuttLow" and/or "HeadbuttHight" encounter types have been defined for the map). The def that decides this is&nbsp;<code>pbHeadbuttEffect</code>&nbsp;in the script section&nbsp;<b>PokemonHiddenMoves</b>. The calculation of the encounter chance, and which type of Headbutt encounter is used, is a little complicated and involves the tree's coordinates and the&nbsp;player's trainer ID number. The chance is either 10%, 50% or 80% depending on the calculation, and if it is 10% the "HeadbuttLow" encounter type is used ("HeadbuttHigh" is used otherwise).
						</p>
						<h2><span class="mw-headline" id="Terrain_tag_obstacles">Terrain tag obstacles</span></h2>
						<p>
							These are tiles with particular&nbsp;terrain tags&nbsp;that prevent or limit the player's movement. Such terrain tags are:
						</p>
						<ul>
							<li>1 - Ledge.</li>
							<li>5, 6, 7, 8, 9 - Water tiles (for surfing).</li>
							<li>5 - Deep water (for diving).</li>
							<li>8 - Waterfalls (for ascending waterfalls).</li>
							<li>12 - Ice.</li>
						</ul>
						<p>
							The movement restrictions of these tiles (except Ice tiles) are actually defined by their passabilities rather than because of a special property of the terrain tags themselves. The terrain tags mentioned are only noteworthy because they affect how the player moves over these tiles (see also the article&nbsp;Tilesets):
						</p>
						<ul>
							<li>1 - The player jumps over this tile rather than walking over it.</li>
							<li>5, 6, 7, 8, 9 - Can be traversed by&nbsp;using the move Surf.</li>
							<li>5 - Can cause a map transfer by&nbsp;using the move Dive&nbsp;while on this tile (see below).</li>
							<li>8 - The player automatically passes over these tiles, either by surfing down it or&nbsp;using the move Waterfall&nbsp;to climb it.</li>
							<li>12 - The player slides in the same direction until they hit something.</li>
						</ul>
						<p>
							For the most part, setting up obstacles using these tiles is as simple as creating the map using these tiles.
						</p>
						<h3><span class="mw-headline" id="Waterfalls">Waterfalls</span></h3>
						<p>
							Waterfalls involve two different&nbsp;terrain tags: 8 (the main part) and 9 (the crest/top).
						</p><p>
							The main part of a waterfall cannot be surfed over, and it must be&nbsp;interacted with&nbsp;in order to ascend it (with the move Waterfall). When the player ascends a waterfall, they will keep moving up until they are no longer on a tile with either of the waterfall terrain tags.
						</p><p>
							The crest of a waterfall is the top row of tiles of a waterfall. When the player surfs onto a waterfall crest, they will automatically fall down the waterfall until they are no longer on a tile with either of the waterfall terrain tags.
						</p><p>
							While moving up or down a waterfall, the player will not&nbsp;encounter&nbsp;any wild Pokémon.
						</p>
						<h3><span class="mw-headline" id="Underwater_areas">Underwater areas</span></h3>
						<p>
							There is a&nbsp;terrain tag&nbsp;for deep water (5). When the player&nbsp;uses the move Dive&nbsp;while surfing on a tile with this terrain tag, they will be transferred to a different map. The map they will transfer to is defined by that map's "DiveMap"&nbsp;metadata. All maps with reachable deep water&nbsp;<i>must</i>&nbsp;have this metadata set, as must all underwater maps (in which case this metadata refers to the surface map). Multiple maps cannot have the same "DiveMap" metadata.
						</p><p>
							The underwater map must be the same size as the surface map. This is because when the move Dive is used, the player is transferred to the same coordinates on the underwater map as they were at on the surface map (and vice versa). Because of this, it is vital that wherever Dive can be used on the surface, there is a corresponding open area where the player can dive to in the underwater map (i.e. there are no rocks or NPCs or anything there which they could land on).
						</p><p>
							There is a setting in the&nbsp;script section&nbsp;<b>Settings</b>&nbsp;called&nbsp;<code>DIVINGSURFACEANYWHERE</code>. If this is TRUE, then the player will always be able to surface while underwater. If this is FALSE, then they will only be able to surface if they are below a patch of deep water (i.e. they could dive down to get straight to their current position).
						</p><p>
							A special method is needed to allow the player to transfer to a different map while remaining diving (e.g. entering an underwater cave). Information about this is in the article&nbsp;Map transfers.
						</p>
						<!--
					NewPP limit report
					Cached time: 20210511033708
					Cache expiry: 1209600
					Dynamic content: false
					CPU time usage: 0.009 seconds
					Real time usage: 0.010 seconds
					Preprocessor visited node count: 149/1000000
					Preprocessor generated node count: 0/1000000
					Post‐expand include size: 0/2097152 bytes
					Template argument size: 0/2097152 bytes
					Highest expansion depth: 2/40
					Expensive parser function count: 0/100
					Unstrip recursion depth: 0/20
					Unstrip post‐expand size: 85/5000000 bytes
					-->
						<!--
					Transclusion expansion time report (%,ms,calls,template)
					100.00%    0.000      1 -total
					-->
						<!-- Saved in parser cache with key prod:essentialsdocs:pcache:idhash:175-0!canonical and timestamp 20210511033708 and revision id 246
					 -->
					</div>
				</div>								<div class="printfooter">Retrieved from "<a dir="ltr" href="https://web.archive.org/web/20210512072417/https://essentialsdocs.fandom.com/wiki/Obstacles?oldid=246">https://essentialsdocs.fandom.com/wiki/Obstacles?oldid=246</a>"</div>
			</div>


			<div class="license-description">
				Community content is available under <a href="https://web.archive.org/web/20210512072417/https://www.fandom.com/licensing">CC-BY-SA</a> unless otherwise noted.
			</div>
			<!-- render SkinAfterContent hook output - used by article comments, SMW factbox etc. -->
			<!-- end SkinAfterContent output -->
		</div>
	</article>
	<!-- WikiaMainContent -->
</section>